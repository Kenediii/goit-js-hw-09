(function(){const s=document.createElement("link").relList;if(s&&s.supports&&s.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))l(e);new MutationObserver(e=>{for(const t of e)if(t.type==="childList")for(const i of t.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&l(i)}).observe(document,{childList:!0,subtree:!0});function c(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerPolicy&&(t.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?t.credentials="include":e.crossOrigin==="anonymous"?t.credentials="omit":t.credentials="same-origin",t}function l(e){if(e.ep)return;e.ep=!0;const t=c(e);fetch(e.href,t)}})();const m=document.querySelector("body"),r=document.createElement("form");r.classList.add("feedback-form");r.autocomplete="off";m.append(r);r.innerHTML="<label>Email<input type='email' name='email' autofocus /></label><label>Message<textarea name='message' rows='8'></textarea></label><button type='submit'>Submit</button>";const a="feedback-form-state";let n={};localStorage.hasOwnProperty(a)&&(n=JSON.parse(localStorage.getItem(a)));r.addEventListener("input",o=>{const s=o.currentTarget.elements.email.value,c=o.currentTarget.elements.message.value,l=s.trim(),e=c.trim();n={email:l,message:e},localStorage.setItem(a,JSON.stringify(n))});const u=localStorage.getItem(a);if(u!==null){const o=JSON.parse(localStorage.getItem(a));r.elements.email.value=o.email,r.elements.message.value=o.message}r.addEventListener("submit",o=>{o.preventDefault(),r.elements.email.value!==""&&r.elements.message.value!==""?(console.log(n),localStorage.removeItem(a),r.reset()):alert("Fields cannot be empty!")});
//# sourceMappingURL=commonHelpers2.js.map
